def expandAll(op: CommandOp): CommandOp = op match {
  case `/dev/fd`(op0@_) => /dev/fd(expandAll(op0)) 
  case `/dev/tcp`(op0@_, op1@_) => /dev/tcp(expandAll(op0), expandAll(op1)) 
  case `/dev/udp`(op0@_, op1@_) => /dev/udp(expandAll(op0), expandAll(op1)) 
  case AnsiCQuoted(op0@_) => AnsiCQuoted(expandAll(op0)) 
  case ArithmeticExpression(op0@_) => ArithmeticExpression(expandAll(op0)) 
  case ArrayVariable(op0@_) => ArrayVariable(expandAll(op0)) 
  case BashCliArgVariable(op0@_, op1@_) => BashCliArgVariable(expandAll(op0), expandAll(op1)) 
  case BashCliFlagArgVariable(op0@_, op1@_, op2@_) => BashCliFlagArgVariable(expandAll(op0), expandAll(op1), expandAll(op2)) 
  case BashCliOptArgVariable(op0@_, op1@_, op2@_) => BashCliOptArgVariable(expandAll(op0), expandAll(op1), expandAll(op2)) 
  case BashCliVecArgVariable(op0@_, op1@_, op2@_) => BashCliVecArgVariable(expandAll(op0), expandAll(op1), expandAll(op2)) 
  case BashVariable(op0@_, op1@_, op2@_, op3@_) => BashVariable(expandAll(op0), expandAll(op1), expandAll(op2), expandAll(op3)) 
  case CDo(op0@_) => CDo(expandAll(op0)) 
  case CElif(op0@_) => CElif(expandAll(op0)) 
  case CElse(op0@_) => CElse(expandAll(op0)) 
  case CFileDescriptorIsOpenAndReferTerminal(op0@_, op1@_) => CFileDescriptorIsOpenAndReferTerminal(expandAll(op0), expandAll(op1)) 
  case CFor(op0@_) => CFor(expandAll(op0)) 
  case CGroupIdBitSet(op0@_, op1@_) => CGroupIdBitSet(expandAll(op0), expandAll(op1)) 
  case CIf(op0@_, op1@_) => CIf(expandAll(op0), expandAll(op1)) 
  case CIfIsFile(op0@_, op1@_) => CIfIsFile(expandAll(op0), expandAll(op1)) 
  case CIn(op0@_) => CIn(expandAll(op0)) 
  case CIsBlock(op0@_, op1@_) => CIsBlock(expandAll(op0), expandAll(op1)) 
  case CIsCharacter(op0@_, op1@_) => CIsCharacter(expandAll(op0), expandAll(op1)) 
  case CIsDirectory(op0@_, op1@_) => CIsDirectory(expandAll(op0), expandAll(op1)) 
  case CIsExecutable(op0@_, op1@_) => CIsExecutable(expandAll(op0), expandAll(op1)) 
  case CIsFile(op0@_, op1@_) => CIsFile(expandAll(op0), expandAll(op1)) 
  case CIsGreaterThanZero(op0@_, op1@_) => CIsGreaterThanZero(expandAll(op0), expandAll(op1)) 
  case CIsModifiedSinceLastRead(op0@_, op1@_) => CIsModifiedSinceLastRead(expandAll(op0), expandAll(op1)) 
  case CIsNamedPipe(op0@_, op1@_) => CIsNamedPipe(expandAll(op0), expandAll(op1)) 
  case CIsOwnedByEffectiveGroupId(op0@_, op1@_) => CIsOwnedByEffectiveGroupId(expandAll(op0), expandAll(op1)) 
  case CIsOwnedByEffectiveUserId(op0@_, op1@_) => CIsOwnedByEffectiveUserId(expandAll(op0), expandAll(op1)) 
  case CIsReadAble(op0@_, op1@_) => CIsReadAble(expandAll(op0), expandAll(op1)) 
  case CIsSocket(op0@_, op1@_) => CIsSocket(expandAll(op0), expandAll(op1)) 
  case CIsSymbolLink(op0@_, op1@_) => CIsSymbolLink(expandAll(op0), expandAll(op1)) 
  case CIsSymbolicLink(op0@_, op1@_) => CIsSymbolicLink(expandAll(op0), expandAll(op1)) 
  case CIsWritable(op0@_, op1@_) => CIsWritable(expandAll(op0), expandAll(op1)) 
  case CStickyBitSet(op0@_, op1@_) => CStickyBitSet(expandAll(op0), expandAll(op1)) 
  case CThen(op0@_) => CThen(expandAll(op0)) 
  case CUntil(op0@_, op1@_) => CUntil(expandAll(op0), expandAll(op1)) 
  case CUserIdBitSet(op0@_, op1@_) => CUserIdBitSet(expandAll(op0), expandAll(op1)) 
  case CWhile(op0@_, op1@_) => CWhile(expandAll(op0), expandAll(op1)) 
  case CmdArgCtx(op0@_, op1@_) => CmdArgCtx(expandAll(op0), expandAll(op1)) 
  case CmdArgs(op0@_) => CmdArgs(expandAll(op0)) 
  case CommandListBuilder(op0@_) => CommandListBuilder(expandAll(op0)) 
  case CommentLine(op0@_, op1@_) => CommentLine(expandAll(op0), expandAll(op1)) 
  case ConditionalBuilder(op0@_) => ConditionalBuilder(expandAll(op0)) 
  case DebugValue(op0@_) => DebugValue(expandAll(op0)) 
  case FileDescriptor(op0@_) => FileDescriptor(expandAll(op0)) 
  case FileName(op0@_, op1@_) => FileName(expandAll(op0), expandAll(op1)) 
  case FilePath(op0@_, op1@_, op2@_) => FilePath(expandAll(op0), expandAll(op1), expandAll(op2)) 
  case FolderPath(op0@_, op1@_) => FolderPath(expandAll(op0), expandAll(op1)) 
  case HereDoc(op0@_, op1@_, op2@_) => HereDoc(expandAll(op0), expandAll(op1), expandAll(op2)) 
  case HereString(op0@_, op1@_) => HereString(expandAll(op0), expandAll(op1)) 
  case IntVariable(op0@_) => IntVariable(expandAll(op0)) 
  case LocalizationString(op0@_) => LocalizationString(expandAll(op0)) 
  case ParameterExpander(op0@_) => ParameterExpander(expandAll(op0)) 
  case ParameterExpanderVariable(op0@_) => ParameterExpanderVariable(expandAll(op0)) 
  case PipelineBuilder(op0@_) => PipelineBuilder(expandAll(op0)) 
  case RelFolderPath(op0@_) => RelFolderPath(expandAll(op0)) 
  case RelPath(op0@_, op1@_) => RelPath(expandAll(op0), expandAll(op1)) 
  case SheBang(op0@_) => SheBang(expandAll(op0)) 
  case SimpleCommand(op0@_, op1@_, op2@_, op3@_) => SimpleCommand(expandAll(op0), expandAll(op1), expandAll(op2), expandAll(op3)) 
  case SubShellVariable(op0@_) => SubShellVariable(expandAll(op0)) 
  case TextVariable(op0@_) => TextVariable(expandAll(op0)) 
  case a => a
}
